<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Mike Hartington&#39;s blog</title>
    <link>http://mhartington.io/post/</link>
    <description>Recent content in Posts on Mike Hartington&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Jan 2016 16:01:47 -0500</lastBuildDate>
    <atom:link href="http://mhartington.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Ionic IO app name</title>
      <link>http://mhartington.io/post/ionic-io-app-name/</link>
      <pubDate>Fri, 08 Jan 2016 16:01:47 -0500</pubDate>
      
      <guid>http://mhartington.io/post/ionic-io-app-name/</guid>
      <description>&lt;p&gt;A good question came up in the Ionic Slack today. A dev was looking to change the name of an app that was already uploaded to the Ionic platform portal.&lt;/p&gt;

&lt;p&gt;When you start an ionic project from the CLI, along with all the html/css/js that you need, it creats an &lt;code&gt;ionic.project&lt;/code&gt; file. In here, you get your apps name and app_id
set, which gets used by the CLI&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;
{
  &amp;quot;name&amp;quot;: &amp;quot;tmp&amp;quot;,
  &amp;quot;app_id&amp;quot;: &amp;quot;9cf2c890&amp;quot;
}


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now when I login to the Platform portal and upload my app, I&amp;rsquo;ll see it appear on my dash.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mhartington.io/img/too-many-tmps.png&#34;&gt;&lt;img src=&#34;http://mhartington.io/img/too-many-tmps.png&#34; alt=&#34;too-many-tmps&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, it&amp;rsquo;s not an original name and could be quite confusing.&lt;/p&gt;

&lt;p&gt;So to change the name, I can just edit the name property in my &lt;code&gt;ionic.project&lt;/code&gt; file.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;
{
  &amp;quot;name&amp;quot;: &amp;quot;newName&amp;quot;,
  &amp;quot;app_id&amp;quot;: &amp;quot;9cf2c890&amp;quot;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When I upload the app again, it will change the displayed name, but keep everything else the same.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mhartington.io/img/new-name.png&#34;&gt;&lt;img src=&#34;http://mhartington.io/img/new-name.png&#34; alt=&#34;new-name&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Automated Hugo Builds</title>
      <link>http://mhartington.io/post/automated-hugo-builds/</link>
      <pubDate>Mon, 04 Jan 2016 22:48:59 -0500</pubDate>
      
      <guid>http://mhartington.io/post/automated-hugo-builds/</guid>
      <description>

&lt;p&gt;This is a static site built using &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt;. It&amp;rsquo;s similar to Jekyll in a few ways, but written in Go, so it&amp;rsquo;s super fast. Plus it&amp;rsquo;s not ruby so thats always a plus. Hugo is pretty simple to setup, especially on OSX. You can just &lt;code&gt;brew install&lt;/code&gt; it.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install hugo

# create a new site
hugo new site mySite
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also run this on Linux or Windows, so another plus over Jekyll.&lt;/p&gt;

&lt;p&gt;Posts are written in Markdown or HTML, what ever you prefer with some frontmatter that feels very familiar to Jekyll, so you should feel right at home.&lt;/p&gt;

&lt;p&gt;A big selling point was that automated builds were dead simple to setup. They even have a section in their docs about setting it up for Github pages. Though, for their example, it assumes you&amp;rsquo;re using this for a projects gh-pages branch, and not a &lt;code&gt;user.github.io&lt;/code&gt; site. While the process is similar, it does have some important differences that you need to watch out for. Nothing against Hugo, but some thing that they could have made a bit clearer.&lt;/p&gt;

&lt;h2 id=&#34;enabling-builds:7818264fcd3e1b87043e534129824e35&#34;&gt;Enabling builds&lt;/h2&gt;

&lt;p&gt;So first I&amp;rsquo;m going to assume you&amp;rsquo;ve dug into Hugo a bit and maybe built a simple site with a page or two. So let&amp;rsquo;s push this to github!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mhartington.io/img/blog-repo.png&#34;&gt;&lt;img src=&#34;http://mhartington.io/img/blog-repo.png&#34; alt=&#34;blog-repo&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One thing you may notice is that I&amp;rsquo;ve pushed this to a dev branch, and then made that the default branch for the repo. This is where the Hugo docs differ. Since this is a &lt;code&gt;user.github.io&lt;/code&gt; site, we&amp;rsquo;ll need to deploy the final output to master.&lt;/p&gt;

&lt;h2 id=&#34;building-on-push:7818264fcd3e1b87043e534129824e35&#34;&gt;Building on Push&lt;/h2&gt;

&lt;p&gt;Now that we have our code somewhere, we can use a automated build service to handle pushing the updates for us. For this we&amp;rsquo;ll use &lt;a href=&#34;http://wercker.com&#34;&gt;Wercker&lt;/a&gt;. Now this is similar to Travis or CircleCI, but it has a bunch of pre-built processors that you can use to make setup even easier.&lt;/p&gt;

&lt;p&gt;Sign up for Wercker (don&amp;rsquo;t worry, it&amp;rsquo;s free) and create a new app from a github repo&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/img/tutorials/wercker-add-app.png&#34;&gt;&lt;img src=&#34;https://gohugo.io/img/tutorials/wercker-add-app.png&#34; alt=&#34;new-app&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;image courtesy of Hugo&amp;rsquo;s offical docs&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Follow the steps and configure you access without SSH key&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/img/tutorials/wercker-access.png&#34;&gt;&lt;img src=&#34;https://gohugo.io/img/tutorials/wercker-access.png&#34; alt=&#34;blog-repo&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;image courtesy of Hugo&amp;rsquo;s offical docs&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This will give you a template &lt;code&gt;wercker.yml&lt;/code&gt; file, which you can ignore for now. We&amp;rsquo;ll be making our own later on.&lt;/p&gt;

&lt;p&gt;Now that we have an app on Wercker, let&amp;rsquo;s configure our build. Head over to github and grab an &lt;a href=&#34;https://github.com/settings/tokens&#34;&gt;access token&lt;/a&gt;, the default setting will do fine. Copy the token somewhere like a blank text file.&lt;/p&gt;

&lt;p&gt;Back on Wercker, navigate to your app and click the gear icon in the top&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mhartington.io/img/app-settings.png&#34;&gt;&lt;img src=&#34;http://mhartington.io/img/app-settings.png&#34; alt=&#34;new-app&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the sidebar, click Targets and add a custom deploy method.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mhartington.io/img/custom-deploy.png&#34;&gt;&lt;img src=&#34;http://mhartington.io/img/custom-deploy.png&#34; alt=&#34;new-app&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ll just call this GithuPages for now, enable automatic builds, and set the target branch to build from to dev. Now in my case, dev is the name of the branch my site is developed on. It may be different for you so update the name to match what you used.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mhartington.io/img/gh-pages.png&#34;&gt;&lt;img src=&#34;http://mhartington.io/img/gh-pages.png&#34; alt=&#34;new-app&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click save and then add a new environment variable. This will be your github access token you just created.
We&amp;rsquo;ll call it &lt;code&gt;GIT_TOKEN&lt;/code&gt;, add the token, click save and we should be good.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mhartington.io/img/token.png&#34;&gt;&lt;img src=&#34;http://mhartington.io/img/token.png&#34; alt=&#34;new-app&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;the-wercker-yml-file:7818264fcd3e1b87043e534129824e35&#34;&gt;The &lt;code&gt;wercker.yml&lt;/code&gt; file&lt;/h2&gt;

&lt;p&gt;So back in our code base, let&amp;rsquo;s create a &lt;code&gt;wercker.yml&lt;/code&gt; file. This is how we&amp;rsquo;ll configure out build on Wercker and build the hugo site.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;box: debian
build:
  steps:
    - arjen/hugo-build:
        version: &amp;quot;0.15&amp;quot;
        theme: hugo-minimalist-theme
        flags: --buildDrafts=true
deploy:
  steps:
    - install-packages:
        packages: git ssh-client
    - uetchy/gh-pages:
        token: $GIT_TOKEN
        repo: mhartington/mhartington.github.io
        path: public
        domain: mhartington.io
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>A New Year</title>
      <link>http://mhartington.io/post/a-new-year/</link>
      <pubDate>Sun, 03 Jan 2016 12:09:03 -0500</pubDate>
      
      <guid>http://mhartington.io/post/a-new-year/</guid>
      <description>

&lt;p&gt;This isn&amp;rsquo;t as much as a year in review for 2015, but all the things I look forward to doing in 2016.&lt;/p&gt;

&lt;h2 id=&#34;2015:b67d1d6d125631768b0b19907cac5760&#34;&gt;2015&lt;/h2&gt;

&lt;p&gt;So 2015 was a big year for me. I gave so many talks and got to meet a whole bunch of other speakers. This was definitly a year where I felt like I grew the most as a speaker and developer. If you&amp;rsquo;re looking to become a better speaker or get into being a dev advocate, defintily checkout this talk by &lt;a href=&#34;https://twitter.com/r00k&#34;&gt;Ben Orenstein&lt;/a&gt;&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/l9JXH7JPjR4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;


&lt;p&gt;I also got to be on a bunch of podcasts, Adventurs In Angular, AngularAir, as well as the Web Platform Podcast. All of which were really fun and felt like a big growth for me personally.&lt;/p&gt;

&lt;p&gt;Finally one of the coolest things to happen was being accepted into the Google Developer Experts program.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Go figure, I&amp;rsquo;m an expert&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s an amazing program, filled with other amazing developers and it&amp;rsquo;s quite an honour to be a part of.&lt;/p&gt;

&lt;h2 id=&#34;2016:b67d1d6d125631768b0b19907cac5760&#34;&gt;2016&lt;/h2&gt;

&lt;p&gt;Now while 2015 was great, 2016 is shaping up to be an even better year with big changes to my life.&lt;/p&gt;

&lt;h4 id=&#34;i-m-moving:b67d1d6d125631768b0b19907cac5760&#34;&gt;I&amp;rsquo;m moving&lt;/h4&gt;

&lt;p&gt;As much as I love Rhode Island, I am moving out west to the Bay Area. This is something that I thought would be pretty easy for me but is turning out to be really hard. Rhode Island has been the only home I&amp;rsquo;ve known so it&amp;rsquo;s hard for to leave, but it&amp;rsquo;s something I feel like I need to do. No apartment yet, but will be heading out soon to find one and eventually start my new life out there.&lt;/p&gt;

&lt;h3 id=&#34;more-speaking:b67d1d6d125631768b0b19907cac5760&#34;&gt;More Speaking&lt;/h3&gt;

&lt;p&gt;As busy as last year was with conferences, this year is already shaping up to be just as busy. I head out the California to go apartment hunting, then on my way back, I make a quick stop in Utah for Phonegap Day. There&amp;rsquo;s a whole bunch of conferences going on as well, plus some other GDE related events that I&amp;rsquo;ll be attending so life will be very busy, but I&amp;rsquo;ll love every bit of it.&lt;/p&gt;

&lt;h3 id=&#34;more-open-source:b67d1d6d125631768b0b19907cac5760&#34;&gt;More Open Source&lt;/h3&gt;

&lt;p&gt;While working for Ionic, I get to participate in open source every day. While that may seem to be enogh for some, I really want to step up my contribution to any open source project. Whether it&amp;rsquo;s helping out with issues, making PRs, or even helping fund the development, like I currently do for NeoVim. I just want to do more for this community&lt;/p&gt;

&lt;h3 id=&#34;more-time-for-myself:b67d1d6d125631768b0b19907cac5760&#34;&gt;More Time for myself&lt;/h3&gt;

&lt;p&gt;Open source if great and very rewarding&amp;hellip;. but very exhausting. Now this seem very contradictory to what I said before, but I want to spend more time away from my laptop. Since I&amp;rsquo;ll be out in California, maybe plan for a few days away, with no phone or anything, but just to hangout and do some rock climbing. Who knows, but at least something to enjoy MY time. I have this fear of burning out way to early in life and never being able to contribute as much as I could.&lt;/p&gt;

&lt;p&gt;So that&amp;rsquo;s all for now. It is the weekend so, time to close the laptop and enjoy the Sun&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My Dotfiles</title>
      <link>http://mhartington.io/post/my-dotfiles/</link>
      <pubDate>Mon, 28 Dec 2015 10:30:41 -0500</pubDate>
      
      <guid>http://mhartington.io/post/my-dotfiles/</guid>
      <description>

&lt;p&gt;My dotfiles are my pride and joy. There are hundreds of hours spent tweaking them to create the best setup for me. Recently I&amp;rsquo;ve started working on three different machines, my Mac, a Windows machine, as well as Ubuntu. This introduced an interesting issue; how can I create a similar environment across all these platforms, but only store them in one location?&lt;/p&gt;

&lt;h2 id=&#34;tools:090900ff8df7a62498826c12b7a52bda&#34;&gt;Tools&lt;/h2&gt;

&lt;p&gt;In my workflow, I have the following tools setup:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Neovim&lt;/li&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;li&gt;tmux&lt;/li&gt;
&lt;li&gt;zsh&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In fact, this very blog post is being written using all 4 of these tools&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mhartington.io/img/my-shell.png&#34;&gt;&lt;img src=&#34;http://mhartington.io/img/my-shell.png&#34; alt=&#34;my-shell&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;the-problem:090900ff8df7a62498826c12b7a52bda&#34;&gt;The Problem&lt;/h2&gt;

&lt;p&gt;Each of these tools has to be installed at some point for each environment I want to run, but each environment has different ways to install these tools.
For Mac, it&amp;rsquo;s fairly easy, just use homebrew and I can group these into one install command.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ brew install neovim git tmux zsh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then I can sit back and just relax while the real work is done.&lt;/p&gt;

&lt;p&gt;For linux on the other hand, it&amp;rsquo;s not so easy. While there is linuxbrew, the linix port of homebrew, it&amp;rsquo;s often out of date and requires a lengthy &lt;code&gt;agt-get&lt;/code&gt; install for any dependencies. Then add a few lines to my shells &lt;code&gt;rc&lt;/code&gt; file&amp;hellip;.THEN I can install things.&lt;/p&gt;

&lt;p&gt;Don&amp;rsquo;t even get me started on windows&amp;hellip;.I seriously haven&amp;rsquo;t thought about how much of a pain it will be to get things setup on windows.&lt;/p&gt;

&lt;h2 id=&#34;solution:090900ff8df7a62498826c12b7a52bda&#34;&gt;Solution&lt;/h2&gt;

&lt;p&gt;So while all of these have a slightly different problem, I can write a simple &lt;a href=&#34;https://github.com/mhartington/dotfiles/blob/master/install.sh&#34;&gt;install script&lt;/a&gt; in bash to handle most of it.&lt;/p&gt;

&lt;p&gt;In that script, it handles my setup for a fresh Mac machine.&lt;/p&gt;

&lt;p&gt;But what about Ubuntu? Well, I just write another script.&lt;/p&gt;

&lt;p&gt;It may not be the most elegant solution, but for me and what I need, it works great.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Welcome</title>
      <link>http://mhartington.io/post/welcome/</link>
      <pubDate>Mon, 28 Dec 2015 09:37:11 -0500</pubDate>
      
      <guid>http://mhartington.io/post/welcome/</guid>
      <description>&lt;p&gt;Consider this my first post&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>